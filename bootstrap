#!/usr/bin/env ruby

# run this script as root
# prerequisites:
# apt-get -y install ruby rake
#
# when prompted for a MySQL password, please leave it blank.
# (the script will set a secure password later)
#
# TODO: postfix for outgoing email
# TODO: allow configuration by readline (inc. pubkey)

require 'rake'

# Configuration

INSTALL_RUBY_VERSION        = '1.9' # or 'ree'
RUBY_1_9_URL                = 'http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.2-p290.tar.gz'
REE_URL                     = 'http://rubyenterpriseedition.googlecode.com/files/ruby-enterprise-1.8.7-2011.03.tar.gz'
RAILS_USER                  = 'rails'
SITE_NAME                   = 'foo.bar.com'
USE_MYSQL                   = true
MYSQL_DATABASE              = ''
MYSQL_USERNAME              = ''

#
#
#

site_name             = SITE_NAME
mysql_database        = MYSQL_DATABASE
mysql_username        = MYSQL_USERNAME

$chars = [('a'..'z'),('A'..'Z'),('0'..'9')].map {|i| i.to_a }.flatten
mysql_password        = (0..16).map { $chars[rand($chars.length)] }.join
mysql_root_password   = (0..16).map { $chars[rand($chars.length)] }.join

#
# Config

PACKAGES = %w(
  apache2-mpm-prefork
  build-essential
  wget
  curl
  screen
  vim
  zlib1g-dev
  libssl-dev
  libreadline5-dev
  libcurl4-openssl-dev
  apache2-prefork-dev
  libapr1-dev
  libaprutil1-dev
  git-core
  imagemagick
)

if USE_MYSQL
  PACKAGES.push('mysql-server')
end

#
# Helpers

def write_file(file, contents)
  File.open(file, "w") { |f| f.write(contents) }
end

def remove_line(file, pattern)
  infile = File.read(file)
  File.open(file, "w") do |f|
    infile.each_line do |l|
      f.write(l) unless l =~ pattern
    end
  end
end

def append_line(file, line)
  File.open(file, "a") { |f| f.write("\n#{line}") }
end

def ruby_cmd(cmd)
  case INSTALL_RUBY_VERSION
  when 'ree'
    "/opt/ree/bin/#{cmd}"
  when '1.9'
    "/usr/local/bin/#{cmd}"
  end
end

def ruby_path
  ruby_cmd "ruby"
end

def ruby_exec(cmd)
  sh ruby_cmd(cmd)
end

#
# Sanity check

unless %w(ree 1.9).include?(INSTALL_RUBY_VERSION)
  $stderr.puts "Invalid Ruby version!"
  exit
end

#
# Install packages

sh "apt-get update && apt-get install -y #{PACKAGES.join(' ')}"

#
# Install REE & Passenger

case INSTALL_RUBY_VERSION
when 'ree'
  sh "cd ~ && curl -o ree.tgz #{REE_URL} && tar xf ree.tgz && cd ~/ruby-enterprise-* && ./installer -a /opt/ree"
when '1.9'
  sh "cd ~ && curl -o ruby.tgz #{RUBY_1_9_URL} && tar xf ruby.tgz && cd ~/ruby* && ./configure --prefix=/usr/local && make && make install"
  ruby_exec "gem install passenger"
end

ruby_exec "gem install bundler"

puts "compiling passenger..."
out = `#{ruby_cmd('passenger-install-apache2-module -a')}`

out =~ /(LoadModule\s+[ \w\.\-\/]+)/
passenger_load_module = $1.strip

out =~ /(PassengerRoot\s*[ \w\.\-\/]+)/
passenger_root = $1.strip

out =~ /(PassengerRuby\s*[ \w\.\-\/]+)/
passenger_ruby = $1.strip

write_file("/etc/apache2/mods-available/passenger.load", "#{passenger_load_module}\n")
write_file("/etc/apache2/mods-available/passenger.conf", "#{passenger_root}\n#{passenger_ruby}\n")

sh "a2enmod passenger"
sh "/etc/init.d/apache2 restart"

#
# Lock down ssh

remove_line("/etc/ssh/sshd_config", /PermitRootLogin/)
remove_line("/etc/ssh/sshd_config", /AllowGroups/)
remove_line("/etc/ssh/sshd_config", /PasswordAuthentication/)
append_line("/etc/ssh/sshd_config", "PermitRootLogin no")
append_line("/etc/ssh/sshd_config", "AllowGroups ssh")
append_line("/etc/ssh/sshd_config", "PasswordAuthentication no")

sh "/etc/init.d/ssh restart"

#
# Create user account and directory structure

sh "mkdir /web"
sh "useradd -d /web/#{RAILS_USER} -s /bin/bash -m -U -G ssh #{RAILS_USER}"
sh "mkdir -p ~#{RAILS_USER}/.ssh"
sh "touch ~#{RAILS_USER}/.ssh/authorized_keys"
sh "chown -R #{RAILS_USER}:#{RAILS_USER} ~#{RAILS_USER}/.ssh"
sh "chmod 0700 ~#{RAILS_USER}/.ssh"
sh "chmod 0600 ~#{RAILS_USER}/.ssh/authorized_keys"

#
# MySQL config

if USE_MYSQL
  sh "mysqladmin -uroot password '#{mysql_root_password}'" rescue nil
  sh "mysqladmin --defaults-extra-file=/etc/mysql/debian.cnf create #{mysql_database}" rescue nil
  sh "mysql --defaults-extra-file=/etc/mysql/debian.cnf -e \"GRANT ALL ON #{mysql_database}.* TO '#{mysql_username}'@'localhost' IDENTIFIED BY '#{mysql_password}'\""
  sh "echo '#{mysql_root_password}' > ~/mysql_password"
end

#
# Create default vhost

if site_name
  %w(shared/config releases).each do |dir|
    sh "mkdir -p /web/#{RAILS_USER}/sites/#{site_name}/#{dir}"
  end
  
  File.open("/etc/apache2/sites-available/#{site_name}", "w") do |f|
    f.write <<-CONF
<VirtualHost *:80>
  ServerName #{site_name}
  ServerAlias www.#{site_name}
  DocumentRoot /web/#{RAILS_USER}/sites/#{site_name}/current/public
  <Directory /web/#{RAILS_USER}/sites/#{site_name}/current/public>
    AllowOverride all
    Options -MultiViews
  </Directory>
</VirtualHost>
CONF
  end

  sh "a2ensite #{site_name}"

  if mysql_database
    File.open("/web/#{RAILS_USER}/sites/#{site_name}/shared/config/database.yml", "w") do |f|
     f.write <<-CONF
production:
  adapter: mysql2
  host: localhost
  database: #{mysql_database}
  username: #{mysql_username}
  password: #{mysql_password}
  encoding: utf8
  socket: /var/run/mysqld/mysqld.sock
CONF
    end
  end

  sh "chown -R #{RAILS_USER} /web/#{RAILS_USER}"
  sh "chmod 0600 /web/#{RAILS_USER}/sites/#{site_name}/shared/config/database.yml"
end

puts "All done! Remember to add a key for user `#{RAILS_USER}`."
puts "It is now safe to remove the distribution's ruby version, if you wish."
